<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <title>DListModule - FSharpx Documentation</title>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/>
    <link type="text/css" rel="stylesheet" href="../main.css"/>
    <script type="text/javascript" src="../js/jquery-1.3.2.min.js"></script>
    <script type="text/javascript" src="../js/jquery.scrollTo-min.js"></script>
    <script type="text/javascript" src="../js/navigation.js"></script>
    <script type="text/javascript" src="../js/example.js"></script>
  </head>
  <body><div id="namespaces">
	<h2 class="fixed">Namespaces</h2>
	<div class="scroll">
		<ul>
			<li>
          <a href="../FSharpx.Collections.Experimental/index.htm" class="current">FSharpx.Collections.Experimental</a>
      </li>
		</ul>
	</div>
</div><div id="types">
  <h2 class="fixed">Types in FSharpx.Collections.Experimental</h2>
	<div class="scroll">
		<ul>
				<li>
            <a href="../FSharpx.Collections.Experimental/AltBinaryRandomAccessListModule.htm">AltBinaryRandomAccessListModule</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/AltBinRndAccList`1.htm">AltBinRndAccList&lt;a&gt;</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/AssemblyInfo.htm">AssemblyInfo</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/BankersDeque`1.htm">BankersDeque&lt;a&gt;</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/BankersDequeModule.htm">BankersDequeModule</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/BankersQueue`1.htm">BankersQueue&lt;a&gt;</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/BankersQueueModule.htm">BankersQueueModule</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/BatchedDeque`1.htm">BatchedDeque&lt;a&gt;</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/BatchedDequeModule.htm">BatchedDequeModule</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/BatchedQueue`1.htm">BatchedQueue&lt;a&gt;</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/BatchedQueueModule.htm">BatchedQueueModule</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/BinaryRandomAccessList`1.htm">BinaryRandomAccessList&lt;a&gt;</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/BinaryRandomAccessListModule.htm">BinaryRandomAccessListModule</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/BinaryTree`1.htm">BinaryTree`1</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/BinaryTreeZipper.htm">BinaryTreeZipper</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/BinaryTreeZipper`1.htm">BinaryTreeZipper`1</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/BinomialHeap.htm">BinomialHeap</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/BinomialHeap`1.htm">BinomialHeap&lt;a&gt;</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/BinomialTree`1.htm">BinomialTree&lt;a&gt;</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/BKTree.htm">BKTree</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/BKTree`1.htm">BKTree&lt;a&gt;</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/BootstrappedQueue.htm">BootstrappedQueue</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/BootstrappedQueue`1.htm">BootstrappedQueue`1</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/BottomUpMergeSort.htm">BottomUpMergeSort</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/Deque`1.htm">Deque&lt;a&gt;</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/DequeModule.htm">DequeModule</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/Digit`1.htm">Digit&lt;a&gt;</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/DList`1.htm">DList&lt;a&gt;</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/DListModule.htm" class="current">DListModule</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/Exceptions.htm">Exceptions</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/Functions`1.htm">Functions`1</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/HeapPriorityQueue.htm">HeapPriorityQueue</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/HoodMelvilleQueue`1.htm">HoodMelvilleQueue&lt;a&gt;</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/HoodMelvilleQueueModule.htm">HoodMelvilleQueueModule</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/IDeque`1.htm">IDeque`1</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/IHeap`1.htm">IHeap`1</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/IHeap`2.htm">IHeap`2</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/ImplicitQueue.htm">ImplicitQueue</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/ImplicitQueue`1.htm">ImplicitQueue`1</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/Interfaces.htm">Interfaces</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/IntMap.htm">IntMap</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/IntMap`1.htm">IntMap&lt;a&gt;</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/IPriorityQueue`1.htm">IPriorityQueue`1</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/IQueue`1.htm">IQueue`1</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/IRandomAccessList`1.htm">IRandomAccessList`1</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/IVector`1.htm">IVector`1</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/LazyListHelpr.htm">LazyListHelpr</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/LeftistHeap`1.htm">LeftistHeap&lt;a&gt;</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/LeftistHeapModule.htm">LeftistHeapModule</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/ListHelpr.htm">ListHelpr</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/ListZipper.htm">ListZipper</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/ListZipper`1.htm">ListZipper`1</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/NonEmptyBootstrappedQueue`1.htm">NonEmptyBootstrappedQueue`1</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/PairingHeap`1.htm">PairingHeap&lt;a&gt;</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/PairingHeapModule.htm">PairingHeapModule</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/PhysicistQueue`1.htm">PhysicistQueue&lt;a&gt;</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/PhysicistQueueModule.htm">PhysicistQueueModule</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/RealTimeDeque.htm">RealTimeDeque</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/RealTimeDeque`1.htm">RealTimeDeque&lt;a&gt;</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/RealTimeQueue.htm">RealTimeQueue</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/RealTimeQueue`1.htm">RealTimeQueue`1</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/ReturnException183c26a427ae489c8fd92ec21a0c9a59.htm">ReturnException183c26a427ae489c8fd92ec21a0c9a59</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/ReturnNoneException183c26a427ae489c8fd92ec21a0c9a59.htm">ReturnNoneException183c26a427ae489c8fd92ec21a0c9a59</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/RingBuffer.htm">RingBuffer</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/RingBuffer`1.htm">RingBuffer&lt;a&gt;</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/RoseTree`1.htm">RoseTree&lt;a&gt;</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/RoseTreeModule.htm">RoseTreeModule</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/RotationState`1.htm">RotationState&lt;a&gt;</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/SkewBinaryRandomAccessList`1.htm">SkewBinaryRandomAccessList&lt;a&gt;</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/SkewBinaryRandomAccessListModule.htm">SkewBinaryRandomAccessListModule</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/Sortable`1.htm">Sortable`1</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/Tags.htm">Tags</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/Timeseries`1.htm">Timeseries&lt;a&gt;</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/TreeBRAL`1.htm">TreeBRAL&lt;a&gt;</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/TreeDirection.htm">TreeDirection</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/TreeSBRAL`1.htm">TreeSBRAL&lt;a&gt;</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/TreeZipperDirection.htm">TreeZipperDirection</a>
        </li>
				<li>
            <a href="../FSharpx.Collections.Experimental/Vector.htm">Vector</a>
        </li>
		</ul>
	</div>
</div>
    <div class="header">
		<p class="class"><strong>Type</strong> DListModule</p>
		<p><strong>Namespace</strong> FSharpx.Collections.Experimental</p>
	</div>
    <div class="sub-header">
		
		
			<h3 class="section">Methods</h3>
			<ul>
				<li><a href="../FSharpx.Collections.Experimental/DListModule.htm#append``1">append&lt;a&gt;</a></li>
				<li><a href="../FSharpx.Collections.Experimental/DListModule.htm#cons``1">cons&lt;a&gt;</a></li>
				<li><a href="../FSharpx.Collections.Experimental/DListModule.htm#fold``2">fold&lt;a, b&gt;</a></li>
				<li><a href="../FSharpx.Collections.Experimental/DListModule.htm#head``1">head&lt;a&gt;</a></li>
				<li><a href="../FSharpx.Collections.Experimental/DListModule.htm#isEmpty``1">isEmpty&lt;a&gt;</a></li>
				<li><a href="../FSharpx.Collections.Experimental/DListModule.htm#length``1">length&lt;a&gt;</a></li>
				<li><a href="../FSharpx.Collections.Experimental/DListModule.htm#snoc``1">snoc&lt;a&gt;</a></li>
				<li><a href="../FSharpx.Collections.Experimental/DListModule.htm#tail``1">tail&lt;a&gt;</a></li>
				<li><a href="../FSharpx.Collections.Experimental/DListModule.htm#toArray``1">toArray&lt;a&gt;</a></li>
				<li><a href="../FSharpx.Collections.Experimental/DListModule.htm#toList``1">toList&lt;a&gt;</a></li>
				<li><a href="../FSharpx.Collections.Experimental/DListModule.htm#toSeq``1">toSeq&lt;a&gt;</a></li>
			</ul>
		
		
	</div>
	
	
	
	<h3 class="section">Public static methods</h3>
	
	<div id="append``1" class="method">
		<h4><a href="../FSharpx.Collections.Experimental/DList`1.htm">DList&lt;a&gt;</a> <strong>append&lt;a&gt;</strong>(<a href="../FSharpx.Collections.Experimental/DList`1.htm">DList&lt;a&gt;</a> left, <a href="../FSharpx.Collections.Experimental/DList`1.htm">DList&lt;a&gt;</a> right)</h4>
		<div class="content">O(1). Returns a new DList of two lists. 



      
    </div>
	</div>
	<div id="cons``1" class="method">
		<h4><a href="../FSharpx.Collections.Experimental/DList`1.htm">DList&lt;a&gt;</a> <strong>cons&lt;a&gt;</strong>(<span title="FSharpx.Collections.Experimental.a">a</span> hd, <a href="../FSharpx.Collections.Experimental/DList`1.htm">DList&lt;a&gt;</a> tl)</h4>
		<div class="content">O(1). Returns a new DList with the element added to the beginning. 



      
    </div>
	</div>
	<div id="fold``2" class="method">
		<h4><span title="FSharpx.Collections.Experimental.a">a</span> <strong>fold&lt;a, b&gt;</strong>(<span title="Microsoft.FSharp.Core.FSharpFunc<a, FSharpFunc<b, a>>">FSharpFunc&lt;a, FSharpFunc&lt;b, a&gt;&gt;</span> f, <span title="FSharpx.Collections.Experimental.a">a</span> seed, <a href="../FSharpx.Collections.Experimental/DList`1.htm">DList&lt;a&gt;</a> l)</h4>
		<div class="content">Fold walks the DList using constant stack space. Implementation is from Norman Ramsey.
See http://stackoverflow.com/questions/5324623/functional-o1-append-and-on-iteration-from-first-element-list-data-structure/5334068#5334068 



      
    </div>
	</div>
	<div id="head``1" class="method">
		<h4><span title="FSharpx.Collections.Experimental.a">a</span> <strong>head&lt;a&gt;</strong>(<a href="../FSharpx.Collections.Experimental/DList`1.htm">DList&lt;a&gt;</a> l)</h4>
		<div class="content">O(log n). Returns the first element. 



      
    </div>
	</div>
	<div id="isEmpty``1" class="method">
		<h4><span title="System.bool">bool</span> <strong>isEmpty&lt;a&gt;</strong>(<a href="../FSharpx.Collections.Experimental/DList`1.htm">DList&lt;a&gt;</a> l)</h4>
		<div class="content">O(1). Returns true if the DList has no elements. 



      
    </div>
	</div>
	<div id="length``1" class="method">
		<h4><span title="System.int">int</span> <strong>length&lt;a&gt;</strong>(<a href="../FSharpx.Collections.Experimental/DList`1.htm">DList&lt;a&gt;</a> l)</h4>
		<div class="content">O(1). Returns the count of elememts. 



      
    </div>
	</div>
	<div id="snoc``1" class="method">
		<h4><a href="../FSharpx.Collections.Experimental/DList`1.htm">DList&lt;a&gt;</a> <strong>snoc&lt;a&gt;</strong>(<a href="../FSharpx.Collections.Experimental/DList`1.htm">DList&lt;a&gt;</a> l, <span title="FSharpx.Collections.Experimental.a">a</span> x)</h4>
		<div class="content">O(1). Returns a new DList with the element added to the end. 



      
    </div>
	</div>
	<div id="tail``1" class="method">
		<h4><a href="../FSharpx.Collections.Experimental/DList`1.htm">DList&lt;a&gt;</a> <strong>tail&lt;a&gt;</strong>(<a href="../FSharpx.Collections.Experimental/DList`1.htm">DList&lt;a&gt;</a> l)</h4>
		<div class="content">O(log n). Returns a new DList of the elements trailing the first element. 



      
    </div>
	</div>
	<div id="toArray``1" class="method">
		<h4><span title="FSharpx.Collections.Experimental.a[]">a[]</span> <strong>toArray&lt;a&gt;</strong>(<a href="../FSharpx.Collections.Experimental/DList`1.htm">DList&lt;a&gt;</a> l)</h4>
		<div class="content">



      
    </div>
	</div>
	<div id="toList``1" class="method">
		<h4><span title="Microsoft.FSharp.Collections.FSharpList<a>">FSharpList&lt;a&gt;</span> <strong>toList&lt;a&gt;</strong>(<a href="../FSharpx.Collections.Experimental/DList`1.htm">DList&lt;a&gt;</a> l)</h4>
		<div class="content">



      
    </div>
	</div>
	<div id="toSeq``1" class="method">
		<h4><span title="System.Collections.Generic.IEnumerable<a>">IEnumerable&lt;a&gt;</span> <strong>toSeq&lt;a&gt;</strong>(<a href="../FSharpx.Collections.Experimental/DList`1.htm">DList&lt;a&gt;</a> l)</h4>
		<div class="content">O(n). Returns a seq of the DList elements. 



      
    </div>
	</div>
	
	<div id="footer">
  <p>Based on v1.7.3.0 of FSharpx</p>
  <p>Generated by <a href="http://docu.jagregory.com">docu</a></p>
</div>
  </body>
</html>